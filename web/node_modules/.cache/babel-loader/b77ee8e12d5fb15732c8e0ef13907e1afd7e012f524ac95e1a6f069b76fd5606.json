{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useMutation}from'react-query';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:8000/api/v1';const LoginPage=()=>{const navigate=useNavigate();const[email,setEmail]=useState('');const[password,setPassword]=useState('');const loginMutation=useMutation(data=>axios.post(\"\".concat(API_BASE_URL,\"/auth/login/\"),data),{onSuccess:response=>{localStorage.setItem('accessToken',response.data.tokens.access);localStorage.setItem('refreshToken',response.data.tokens.refresh);navigate('/dashboard');},onError:()=>{alert('Credenciais inválidas');}});const handleLogin=()=>{if(!email||!password){alert('Preencha todos os campos');return;}loginMutation.mutate({email,password});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Grana.AI\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),autoComplete:\"username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Senha\",value:password,onChange:e=>setPassword(e.target.value),autoComplete:\"current-password\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,disabled:loginMutation.isLoading,children:loginMutation.isLoading?'Entrando...':'Entrar'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xE3o tem conta? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"Cadastre-se\"})]})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","useMutation","axios","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","LoginPage","navigate","email","setEmail","password","setPassword","loginMutation","data","post","concat","onSuccess","response","localStorage","setItem","tokens","access","refresh","onError","alert","handleLogin","mutate","className","children","type","placeholder","value","onChange","e","target","autoComplete","onClick","disabled","isLoading","href"],"sources":["/Users/hatusbatista/Documents/GranaApp/web/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginMutation = useMutation(\n    (data: { email: string; password: string }) =>\n      axios.post(`${API_BASE_URL}/auth/login/`, data),\n    {\n      onSuccess: (response) => {\n        localStorage.setItem('accessToken', response.data.tokens.access);\n        localStorage.setItem('refreshToken', response.data.tokens.refresh);\n        navigate('/dashboard');\n      },\n      onError: () => {\n        alert('Credenciais inválidas');\n      },\n    }\n  );\n\n  const handleLogin = () => {\n    if (!email || !password) {\n      alert('Preencha todos os campos');\n      return;\n    }\n    loginMutation.mutate({ email, password });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>Grana.AI</h1>\n      <h2>Login</h2>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        autoComplete=\"username\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Senha\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        autoComplete=\"current-password\"\n      />\n      <button onClick={handleLogin} disabled={loginMutation.isLoading}>\n        {loginMutation.isLoading ? 'Entrando...' : 'Entrar'}\n      </button>\n      <p>\n        Não tem conta? <a href=\"/register\">Cadastre-se</a>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,YAAY,CAAG,8BAA8B,CAEnD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAe,aAAa,CAAGb,WAAW,CAC9Bc,IAAyC,EACxCb,KAAK,CAACc,IAAI,IAAAC,MAAA,CAAIV,YAAY,iBAAgBQ,IAAI,CAAC,CACjD,CACEG,SAAS,CAAGC,QAAQ,EAAK,CACvBC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAEF,QAAQ,CAACJ,IAAI,CAACO,MAAM,CAACC,MAAM,CAAC,CAChEH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAEF,QAAQ,CAACJ,IAAI,CAACO,MAAM,CAACE,OAAO,CAAC,CAClEf,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CACDgB,OAAO,CAAEA,CAAA,GAAM,CACbC,KAAK,CAAC,uBAAuB,CAAC,CAChC,CACF,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAI,CAACjB,KAAK,EAAI,CAACE,QAAQ,CAAE,CACvBc,KAAK,CAAC,0BAA0B,CAAC,CACjC,OACF,CACAZ,aAAa,CAACc,MAAM,CAAC,CAAElB,KAAK,CAAEE,QAAS,CAAC,CAAC,CAC3C,CAAC,CAED,mBACEN,KAAA,QAAKuB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B1B,IAAA,OAAA0B,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjB1B,IAAA,OAAA0B,QAAA,CAAI,OAAK,CAAI,CAAC,cACd1B,IAAA,UACE2B,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAEvB,KAAM,CACbwB,QAAQ,CAAGC,CAAC,EAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,YAAY,CAAC,UAAU,CACxB,CAAC,cACFjC,IAAA,UACE2B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAErB,QAAS,CAChBsB,QAAQ,CAAGC,CAAC,EAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,YAAY,CAAC,kBAAkB,CAChC,CAAC,cACFjC,IAAA,WAAQkC,OAAO,CAAEX,WAAY,CAACY,QAAQ,CAAEzB,aAAa,CAAC0B,SAAU,CAAAV,QAAA,CAC7DhB,aAAa,CAAC0B,SAAS,CAAG,aAAa,CAAG,QAAQ,CAC7C,CAAC,cACTlC,KAAA,MAAAwB,QAAA,EAAG,oBACc,cAAA1B,IAAA,MAAGqC,IAAI,CAAC,WAAW,CAAAX,QAAA,CAAC,aAAW,CAAG,CAAC,EACjD,CAAC,EACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}