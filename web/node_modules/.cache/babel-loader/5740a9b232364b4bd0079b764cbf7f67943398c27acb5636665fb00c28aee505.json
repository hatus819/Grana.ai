{"ast":null,"code":"var _jsxFileName = \"/Users/hatusbatista/Documents/GranaApp/web/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const loginMutation = useMutation(data => axios.post(`${API_BASE_URL}/auth/login/`, data), {\n    onSuccess: response => {\n      localStorage.setItem('accessToken', response.data.tokens.access);\n      localStorage.setItem('refreshToken', response.data.tokens.refresh);\n      navigate('/dashboard');\n    },\n    onError: () => {\n      alert('Credenciais inválidas');\n    }\n  });\n  const handleLogin = () => {\n    if (!email || !password) {\n      alert('Preencha todos os campos');\n      return;\n    }\n    loginMutation.mutate({\n      email,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Grana.AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      autoComplete: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      autoComplete: \"current-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: loginMutation.isLoading,\n      children: loginMutation.isLoading ? 'Entrando...' : 'Entrar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"N\\xE3o tem conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Tr2PWY7igsR/fEMxLIm/Z44TCGk=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useMutation","axios","jsxDEV","_jsxDEV","API_BASE_URL","LoginPage","_s","navigate","email","setEmail","password","setPassword","loginMutation","data","post","onSuccess","response","localStorage","setItem","tokens","access","refresh","onError","alert","handleLogin","mutate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","autoComplete","onClick","disabled","isLoading","href","_c","$RefreshReg$"],"sources":["/Users/hatusbatista/Documents/GranaApp/web/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation } from 'react-query';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginMutation = useMutation(\n    (data: { email: string; password: string }) =>\n      axios.post(`${API_BASE_URL}/auth/login/`, data),\n    {\n      onSuccess: (response) => {\n        localStorage.setItem('accessToken', response.data.tokens.access);\n        localStorage.setItem('refreshToken', response.data.tokens.refresh);\n        navigate('/dashboard');\n      },\n      onError: () => {\n        alert('Credenciais inválidas');\n      },\n    }\n  );\n\n  const handleLogin = () => {\n    if (!email || !password) {\n      alert('Preencha todos os campos');\n      return;\n    }\n    loginMutation.mutate({ email, password });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>Grana.AI</h1>\n      <h2>Login</h2>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        autoComplete=\"username\"\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Senha\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        autoComplete=\"current-password\"\n      />\n      <button onClick={handleLogin} disabled={loginMutation.isLoading}>\n        {loginMutation.isLoading ? 'Entrando...' : 'Entrar'}\n      </button>\n      <p>\n        Não tem conta? <a href=\"/register\">Cadastre-se</a>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}