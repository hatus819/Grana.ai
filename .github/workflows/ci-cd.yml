name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: |
        cd backend
        python manage.py migrate
    - name: Run tests
      run: |
        cd backend
        python manage.py test

  build-and-deploy:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - name: Build and push Docker image
      run: |
        gcloud builds submit backend --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/grana-ai-backend:$GITHUB_SHA
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy grana-ai-backend \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/grana-ai-backend:$GITHUB_SHA \
          --platform managed \
          --region southamerica-east1 \
          --allow-unauthenticated \
          --set-env-vars DEBUG=False \
          --set-env-vars SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --set-env-vars DB_NAME=${{ secrets.DB_NAME }} \
          --set-env-vars DB_USER=${{ secrets.DB_USER }} \
          --set-env-vars DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --set-env-vars DB_HOST=${{ secrets.DB_HOST }} \
          --set-env-vars DB_PORT=${{ secrets.DB_PORT }}
